<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo 博客的搭建</title>
      <link href="/2021/11/23/Hexo%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%20/"/>
      <url>/2021/11/23/Hexo%20%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA%20/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-博客的搭建"><a href="#Hexo-博客的搭建" class="headerlink" title="Hexo 博客的搭建"></a>Hexo 博客的搭建</h1><h2 id="1-工具的安装配置"><a href="#1-工具的安装配置" class="headerlink" title="1. 工具的安装配置"></a>1. 工具的安装配置</h2><h3 id="1-1-下载安装-node-js："><a href="#1-1-下载安装-node-js：" class="headerlink" title="1.1 下载安装 node.js："></a>1.1 下载安装 node.js：</h3><ul><li>中国官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></li><li>安装后在终端中检验：<code>node -v</code>  (结果为类似 v14.18.1 即成功 )<h3 id="1-2-cnpm安装"><a href="#1-2-cnpm安装" class="headerlink" title="1.2 cnpm安装"></a>1.2 cnpm安装</h3></li></ul><p>node安装后会自动下载 npm ，但npm太慢，所以用淘宝的cnpm</p><ul><li>终端输入命令： <code>npm install -g cnpm --registry==https://registry.npm.taobao.org</code></li><li>安装后检验： <code>cnpm -v</code></li></ul><h3 id="1-3-下载安装git："><a href="#1-3-下载安装git：" class="headerlink" title="1.3 下载安装git："></a>1.3 下载安装git：</h3><ul><li><p>官网下载：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p></li><li><p>安装后检验： <code>git --version</code> (eg: git version 2.33.1.windows.1)</p></li><li><p>推荐2篇git的详细安装过程：</p><p><a href="https://blog.csdn.net/mukes/article/details/115693833">(10条消息) Git 详细安装教程（详解 Git 安装过程的每一个步骤）_mukes的博客-CSDN博客_git安装</a></p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496">安装Git - 廖雪峰的官方网站 (liaoxuefeng.com)</a></p></li></ul><p><strong>注意</strong>：安装完成后要确定你的用户名和邮箱<br><code>git config --global user.name &quot;Your Name&quot;</code><br><code>git config --global user.email &quot;email@example.com&quot;</code></p><h3 id="1-4-安装-hexo"><a href="#1-4-安装-hexo" class="headerlink" title="1.4 安装 hexo"></a>1.4 安装 hexo</h3><ul><li>新建文件夹后，在此打开git或终端输入：<code>npm install -g hexo-cli</code></li></ul><h2 id="2-hexo本地搭建博客"><a href="#2-hexo本地搭建博客" class="headerlink" title="2. hexo本地搭建博客"></a>2. hexo本地搭建博客</h2><h3 id="2-1-初始化"><a href="#2-1-初始化" class="headerlink" title="2.1 初始化"></a>2.1 初始化</h3><p><strong>首先</strong>右键某文件夹打开 Git Bash Here，输入 <code>hexo init</code>（ 静静地等待）</p><p>（如果右键没有的话可能是在git安装过程中没有选将其添加在右键中，也可以在windows的命令终端中执行）</p><p>（ 静静地等待可能会遇到各种奇怪的问题，将报的错Ctrl+ c/v 到百度搜素，再不行就多试几遍，再次试的时候要将你文件夹中的内容清空再init，git和终端换着用，总有解决的方法）</p><p><strong>然后</strong>在当前文件目录下输入 <code>hexo g</code> </p><p>​                                            <code>hexo s</code></p><p>如果没有不成功，你就成功 init 了[doge]，在浏览器访问<a href="http://localhost:4000你就会看到的你新生的blog">http://localhost:4000你就会看到的你新生的blog</a></p><p>要是报错的话在网上找找，相关的内容还是比较全的</p><p>hexo命令的详解：[Hexo系列(三) 常用命令详解 - 半虹 - 博客园 (cnblogs.com)](<a href="https://www.cnblogs.com/wsmrzx/p/9439448.html#:~:text=hexo">https://www.cnblogs.com/wsmrzx/p/9439448.html#:~:text=hexo</a> init 命令用于初始化本地文件夹为网站的根目录,%24 hexo init [folder])</p><h3 id="2-2-美化"><a href="#2-2-美化" class="headerlink" title="2.2 美化"></a>2.2 美化</h3><p>在本地搭好博客后不要着急部署到github上，因为你还要换主题，魔改主题，等你基本弄完后再部署上去，遇到的错更少一些，也更好解决。</p><ul><li>hexo的主题网站：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> </li><li>找到你心仪的主题下载，可以在之前初始化的文件夹中找到themes文件夹，右键git bash ，输入：<code>git clone 主题的github链接</code></li></ul><p> 链接如图：<img src="https://i.loli.net/2021/11/21/1rnPtEsJKXOY5VU.png" alt="image-20211121195214563"></p><p>或是直接download压缩包，解压后放在themes文件中</p><ul><li><p>将下载的文件夹的名字复制，打开你博客目录下的_config.yml文件 ，找到theme，将landscape改为你复制的文件夹名</p></li><li><p>eg:<img src="https://i.loli.net/2021/11/22/wUgQHpIaoTvlr7F.png" alt="image-20211122132839129"><img src="https://i.loli.net/2021/11/22/V4vw7XBD2sg89Ad.png" alt="iage-20211122132901963"></p></li><li><p> 最后<code> hexo -clean hexo g hexo s</code></p></li><li><p>遇到的问题:</p><p>更换主题加载页面后，页面出现<code>extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial</code></p><ul><li>解决方法：cmd命令输入 <code>cnpm install hexo-renderer-pug hexo-renderer-stylus --save </code>,然后hexo三连：clean g s</li></ul></li><li><p>之后就可以根据你选择的主题在网上找资料开始魔改了。</p></li></ul><h2 id="3-部署到github上"><a href="#3-部署到github上" class="headerlink" title="3. 部署到github上"></a>3. 部署到github上</h2><ul><li><p>注册github账号，新建一个仓库（可能会很。。。慢）</p><ul><li><p><img src="https://i.loli.net/2021/11/22/LBOS8EbsWftjPRc.png" alt="image-20211122143519427"> </p></li><li><p><img src="https://i.loli.net/2021/11/22/xNpDf7HZnOhtWwl.png" alt="image-20211122143647031"></p><p><strong>注意</strong>：owner name要和仓库名字相同</p><ul><li><img src="https://i.loli.net/2021/11/22/k2H6fNT5x7peuvP.png" alt="image-20211122143951111"></li></ul></li></ul></li><li><p>在你博客所在目录下git bash ： <code>cnpm install hexo-deployer-git --save</code>  -&gt; 安装 hexo-deployer-git 插件</p></li><li><p>在你博客所在目录下的<code>_config.yml</code> 中修改（<strong>注意</strong>不是主题文件夹中的<code>_config.yml</code> ），如图：</p></li></ul><p><img src="https://i.loli.net/2021/11/22/FkqcLgs5wWoZVDP.png" alt="image-20211122144813319"></p><p>github地址：<img src="https://i.loli.net/2021/11/22/mrkCuFlXgvyQHNZ.png" alt="image-20211122145057211"></p><ul><li>最后博客所在目录下输入命令<code>hexo d</code>,过程中可能需要输入github的username和passwd</li><li>成功后。你就可以访问<a href="https://xxx.github.io/">https://xxx.github.io/</a> </li></ul><h2 id="4-绑定域名"><a href="#4-绑定域名" class="headerlink" title="4. 绑定域名"></a>4. 绑定域名</h2><ul><li><p>你可以在阿里云、腾讯云等购买一个自己的域名，我是新用户一块钱买的，一年有效期。</p></li><li><p>操作：</p><ul><li><p>再买完和一系列操作之后，解析域名，如图：</p><p><img src="https://i.loli.net/2021/11/22/K8DObu4QNExzLVn.png" alt="image-20211122230456856"></p></li><li><p>根据下图配置：</p><p><img src="https://i.loli.net/2021/11/22/6v8jeiTLMbsGd5m.png" alt="image-20211122230912950"></p></li><li><p>然后打开github做相关配置： 找到你之前创建的仓库 settings -&gt; Pages -&gt;Custom domain<br> <img src="https://i.loli.net/2021/11/22/mXo4cLOaBpMvigF.png" alt="image-20211122232349641"><br>  <img src="https://i.loli.net/2021/11/22/cPt2nJfBFA4hIRU.png" alt="image-20211122232432330"><img src="https://i.loli.net/2021/11/22/pHmKDCb7FBijaqo.png" alt="image-20211122232558542"></p></li></ul></li><li><p>okk,如果一切顺利现在你可以通过你自己的域名来访问博客网站了。</p></li></ul><h2 id="5-Typora-PicGo-写文章"><a href="#5-Typora-PicGo-写文章" class="headerlink" title="5. Typora+PicGo 写文章"></a>5. Typora+PicGo 写文章</h2><ul><li><p>因为要在本地写markdown,所以我推荐用Typora来写文章或学习笔记等等，Typora也有一些不足但在同行衬托下，我还是选择使用它。因为插入图片很不爽，所以可以结合PicGo自动上传图片到图床。</p></li><li><p>Typora下载：<a href="https://typora.io/#download">Typora — a markdown editor, markdown reader.</a></p><p>PicGo下载：<a href="https://molunerfinn.com/PicGo/">PicGo</a></p></li><li><p>PicGo下载完后，打开设置 -&gt; 设置Server -&gt; 地址和端口如图：</p></li></ul><p><img src="https://i.loli.net/2021/11/22/TRx9GLhBYA82pbj.png" alt="image-20211122234335920"></p><p><img src="https://i.loli.net/2021/11/22/D7HeKbEr8nhxS9c.png" alt="image-20211122234350892"></p><p><strong>注意</strong>：监听地址是 127.0.0.1，端口为 36677，不是的话会上传失败。</p><ul><li>Typora设置： 点击文件选择偏好设置 -&gt; 图像 </li></ul><p><img src="https://i.loli.net/2021/11/22/gUtYX3Du5dQGO8w.png" alt="image-20211122234620168"></p><p><img src="https://i.loli.net/2021/11/22/LGx1CgdbJPDyQEX.png" alt="image-20211122234657595"></p><p><strong>注意</strong>:<img src="https://i.loli.net/2021/11/22/PN1IqlE5Bbfzag6.png" alt="image-20211122234941124"></p><ul><li>最后你完成所有工作后，点击 验证图片上传选项 检验是否配置好，但失败了也没关系，因为可能有一些小问题，但不要纠结，你可以再截张图放在文章里看上传是否成功。</li></ul><h5 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h5><p>​        这些是我在hexo框架下搭建博客的大体历程，因为是时候写的博客所以更为详细的内容省略了一些。经过了好几天，犯了很多错误，看了许许多多的文章，那些文章确实给了我很大的帮助，所以我也想记录一下，如果对你有一点帮助，我会赶到十分荣幸，也希望你继续帮助别人。因为弄这些的过程中间停滞了一段时间，所以遇到的很多的bug没有即使记录下来，也都忘了是啥，所以如果你遇到我这没有的错误，你可以将error内容复制到百度，基本上都有其他博主的解答，也可以评论区留言。</p><p>theend</p><p>对了，这是我博客的网址：<a href="https://zer0o000.xyz/%EF%BC%8C%E8%BF%98%E5%8D%81%E5%88%86%E7%AE%80%E9%99%8B%EF%BC%8C%E5%A4%9A%E5%A4%9A%E5%8C%85%E6%B6%B5%EF%BC%81">https://zer0o000.xyz/，还十分简陋，多多包涵！</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Github </tag>
            
            <tag> Typora </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP</title>
      <link href="/2021/11/21/HTTP/"/>
      <url>/2021/11/21/HTTP/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="1-什么是http"><a href="#1-什么是http" class="headerlink" title="1. 什么是http"></a>1. 什么是http</h2><p>1.1 简介：</p><p>超文本传输协议（Hyper Text Transfer Protocol，HTTP）基于 TCP/IP 协议的应用层协议，是用于从WWW服务器传输超文本到本地浏览器的传送协议。</p><p>协议规定，服务器只能回应HTML格式的字符串，不能回应别的格式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>Hello World！<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>发展历程：</p><table><thead><tr><th>版本</th><th>简述</th></tr></thead><tbody><tr><td>HTTP 0.9</td><td>该版本只允许 GET 方法，具有典型的无状态性，无协议头和状态码，支持纯文本</td></tr><tr><td>HTTP 1.0</td><td>增加了 HEAD 和 POST 方法，支持长连接、缓存和身份认证</td></tr><tr><td>HTTP 1.1</td><td>增加了 Keep-alive 机制和 PipeLining 流水线，新增了 OPTIONS、PUT、DELETE、TRACE、CONNECT 方法</td></tr><tr><td>HTTP 2.0</td><td>增加了多路复用、头部压缩、随时复位等功能</td></tr></tbody></table><h2 id="2-工作原理"><a href="#2-工作原理" class="headerlink" title="2. 工作原理"></a>2. 工作原理</h2><p>HTTP协议工作基于客户端-服务端(c/s)的架构模型。</p><p>浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。</p><p>Web服务器有：Apache服务器，IIS服务器（Internet Information Services），nginx等。</p><p>Web服务器根据接收到的请求后，向客户端发送响应信息。</p><p>HTTP默认TCP端口号为80，但是你也可以改为8080或者其他端口。</p><p>(典型的HTTP事务处理有如下的过程： </p><p>（1）客户与服务器建立连接；</p><p>（2）客户向服务器提出请求；</p><p>（3）服务器接受请求，并根据请求返回相应的文件作为应答；</p><p>（4）客户与服务器关闭连接。)</p><p><strong>HTTP三点注意事项：</strong> </p><ul><li><p>HTTP是无连接：无连接的含义是限制<strong>每次连接只处理一个请求</strong> 。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p></li><li><p>HTTP是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，<strong>任何类型的数据都可以通过HTTP发送</strong> 。客户端以及服务器指定使用适合的MIME-type内容类型。</p></li><li><p>HTTP是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着<strong>如果后续处理需要前面的信息，则它必须重传</strong> ，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p></li></ul><p>当一个或多个中介出现在请求/响应链中时，情况就变得复杂一些。中介有三种：代理（Proxy）、网关（Gateway）和通道（Tunnel）。一个代理根据URI的绝对格式来接受请求，重写全部或部分消息，通过URI的标识把已格式化过的请求发送到服务器。网关是一个接收代理，作为一些其它服务器的上层，并且如果必须的话，可以把请求翻译给下层的服务器协议。一个通道作为不改变消息的两个连接之间的中继点。当通讯需要通过一个中介（例如：防火墙等）或者是中介不能识别消息的内容时，通道经常被使用。</p><h2 id="3-消息结构"><a href="#3-消息结构" class="headerlink" title="3.消息结构"></a>3.消息结构</h2><p>HTTP是基于客户端/服务端（C/S）的架构模型，通过一个可靠的链接来交换信息，是一个<strong>无状态的请求/响应协议</strong> 。</p><p>一个HTTP”客户端”是一个应用程序（Web浏览器或其他任何客户端），通过连接到服务器达到向服务器发送一个或多个HTTP的请求的目的。</p><p>一个HTTP”服务器”同样也是一个应用程序（通常是一个Web服务，如Apache Web服务器或IIS服务器等），通过接收客户端的请求并向客户端发送HTTP响应数据。</p><p>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。</p><p>一旦建立连接后，数据消息就通过类似Internet邮件所使用的格式[RFC5322]和多用途Internet邮件扩展（MIME）[RFC2045]来传送。</p><h2 id="4-客户端请求消息"><a href="#4-客户端请求消息" class="headerlink" title="4. 客户端请求消息"></a>4. 客户端请求消息</h2><p><img src="https://i.loli.net/2021/10/19/Y4smTy35df8ihct.png" alt="http客户端请求消息.png"></p><p>eg：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET /hello.txt HTTP/1.1</span><br><span class="line">User-Agent: curl/7.16.3 libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3</span><br><span class="line">Host: www.example.com</span><br><span class="line">Accept-Language: en, mi</span><br></pre></td></tr></table></figure><h2 id="5-服务器响应信息"><a href="#5-服务器响应信息" class="headerlink" title="5. 服务器响应信息"></a>5. 服务器响应信息</h2><p>HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行、响应正文。</p><p><img src="https://i.loli.net/2021/10/19/rGRAsf5mceTEo68.jpg" alt="服务器响应信息.jpg"></p><p>eg：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK   //协议版本和状态码</span><br><span class="line">Date: Tue, 26 Dec 2017 02:28:53 GMT</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Connection: close</span><br><span class="line">Server: GitHub.com</span><br><span class="line">Status: 200 OK</span><br><span class="line">Cache-Control: no-cache</span><br><span class="line">Vary: X-PJAX</span><br><span class="line">X-UA-Compatible: IE=Edge,chrome=1</span><br><span class="line">Set-Cookie: user_session=37Q; path=/;</span><br><span class="line">X-Request-Id: e341</span><br><span class="line">X-Runtime: 0.538664</span><br><span class="line">Content-Security-Policy: default-src &#x27;none&#x27;;</span><br><span class="line">Strict-Transport-Security: max-age=31536000; includeSubdomains; preload</span><br><span class="line">Public-Key-Pins: max-age=0;</span><br><span class="line">X-Content-Type-Options: nosniff</span><br><span class="line">X-Frame-Options: deny</span><br><span class="line">X-XSS-Protection: 1; mode=block</span><br><span class="line">X-Runtime-rack: 0.547600</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">X-GitHub-Request-Id: 7400</span><br><span class="line">Content-Length: 128504</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="6-请求方法"><a href="#6-请求方法" class="headerlink" title="6. 请求方法"></a>6. 请求方法</h2><p>HTTP1.0 定义了三种请求方法： <strong>GET</strong> , <strong>POST</strong>  和 <strong>HEAD</strong>  方法。</p><p>HTTP1.1 新增了六种请求方法：<strong>OPTIONS</strong> 、<strong>PUT</strong> 、<strong>PATCH</strong> 、<strong>DELETE</strong> 、TRACE 和 <strong>CONNECT</strong>  方法。</p><table><thead><tr><th>序号</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>GET</td><td>请求指定的页面信息，并返回实体主体。</td></tr><tr><td>2</td><td>HEAD</td><td>类似于 GET 请求，只不过返回的响应中没有具体的内容，用于<strong>获取报头</strong></td></tr><tr><td>3</td><td>POST</td><td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。<strong>数据被包含在请求体中</strong> 。POST 请求可能会导致新的资源的建立和/或已有资源的修改。</td></tr><tr><td>4</td><td>PUT</td><td>（请求服务器存储一个资源）从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td>5</td><td>DELETE</td><td>请求服务器删除指定的页面（资源）。</td></tr><tr><td>6</td><td>CONNECT</td><td>HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td>7</td><td>OPTIONS</td><td>查询服务器的支持选项。</td></tr><tr><td>8</td><td>TRACE</td><td>回显服务器收到的请求，主要用于<strong>测试或诊断</strong> 。</td></tr><tr><td>9</td><td>PATCH</td><td>是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td></tr></tbody></table><h2 id="7-响应头信息"><a href="#7-响应头信息" class="headerlink" title="7. 响应头信息"></a>7. 响应头信息</h2><p>HTTP请求头提供了关于请求，响应或者其他的发送实体的信息。</p><table><thead><tr><th>应答头</th><th>说明</th></tr></thead><tbody><tr><td>Allow</td><td>服务器支持哪些请求方法（如GET、POST等）。</td></tr><tr><td>Content-Encoding</td><td>消息主体内容的<strong>编码形式</strong> 。</td></tr><tr><td>Content-Length</td><td>表示<strong>内容长度</strong> 。只有当浏览器使用持久HTTP连接时才需要这个数据。</td></tr><tr><td>Content-Type</td><td>表示后面的<strong>文档属于什么MIME类型</strong> 。Servlet默认为text/plain，但通常需要显式地指定为text/html。</td></tr><tr><td>Date</td><td>当前的GMT<strong>时间</strong> 。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦。</td></tr><tr><td>Expires</td><td>应该在什么时候认为文档已经过期，从而不再缓存它</td></tr><tr><td>Last-Modified</td><td>文档的最后改动时间。</td></tr><tr><td>Location</td><td>表示客户应当到哪里去提取文档。</td></tr><tr><td>Refresh</td><td>表示浏览器应该在多少时间之后刷新文档，以秒计。</td></tr><tr><td>Server</td><td>服务器名字。Servlet一般不设置这个值，而是由Web服务器自己设置。</td></tr><tr><td>Set-Cookie</td><td>设置和页面关联的Cookie。</td></tr><tr><td>WWW-Authenticate</td><td>客户应该在Authorization头中提供什么类型的授权信息？在包含401（Unauthorized）状态行的应答中这个头是必需的。例如，response.setHeader(“WWW-Authenticate”, “BASIC realm=＼”executives＼””)。  注意Servlet一般不进行这方面的处理，而是让Web服务器的专门机制来控制受密码保护页面的访问（例如.htaccess）。</td></tr></tbody></table><p><strong>Cookie</strong> 是一段不超过4KB的小型文本数据，由一个名称（Name）、一个值（Value）和其它几个用于控制Cookie有效期、安全性、使用范围的可选属性组成。弥补 HTTP 的无状态记录的缺陷。</p><h2 id="8-状态码"><a href="#8-状态码" class="headerlink" title="8. 状态码"></a>8. 状态码</h2><p>介绍：当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求。</p><p>状态码表明资源的请求结果状态，由三位十进制数组成，第一位代表基本的类别：</p><ul><li><p>1xx，信息，服务器收到请求，需要请求者继续执行操作</p></li><li><p>2xx，成功，操作被成功接收并处理</p></li><li><p>3xx，客户端重定向其他资源</p></li><li><p>4xx，客户端错误，请求包含语法错误或无法完成请求</p></li><li><p>5xx，服务器错误，服务器在处理请求的过程中发生了错误</p></li></ul><table><thead><tr><th>状态码</th><th>英文名称</th><th>描述</th></tr></thead><tbody><tr><td>100</td><td>Continue</td><td>服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求</td></tr><tr><td>200</td><td>Ok</td><td>已成功提交，且响应主体中包含请求结果</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。</td></tr><tr><td>400</td><td>Bad Request</td><td>客户端提交请求无效</td></tr><tr><td>401</td><td>Unauthorized</td><td>服务端要求身份验证</td></tr><tr><td>403</td><td>Forbidden</td><td>禁止访问被请求资源</td></tr><tr><td>404</td><td>Not Found</td><td>所请求的资源不存在</td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器执行请求时遇到错误</td></tr></tbody></table><h2 id="9-HTTP-content-type、"><a href="#9-HTTP-content-type、" class="headerlink" title="9. HTTP  content-type、"></a>9. HTTP  content-type、</h2><p>介绍：Content-Type（内容类型），一般是指网页中存在的 Content-Type，用于定义网络文件的类型和网页的编码，决定浏览器将以什么形式、什么编码读取这个文件</p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Type: multipart/form-data; boundary=something</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>KALI的安装、配置</title>
      <link href="/2021/11/21/KALI%E7%9A%84%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AE%E5%92%8C%E6%8D%A2%E6%BA%90/"/>
      <url>/2021/11/21/KALI%E7%9A%84%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AE%E5%92%8C%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h1 id="KALI的安装、配置"><a href="#KALI的安装、配置" class="headerlink" title="KALI的安装、配置"></a>KALI的安装、配置</h1><p>kali镜像下载地址：<a href="http://mirrors.ustc.edu.cn/kali-images/">http://mirrors.ustc.edu.cn/kali-images/</a></p><p>Vmware下载地址：<a href="https://customerconnect.vmware.com/cn/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/16_0">https://customerconnect.vmware.com/cn/downloads/info/slug/desktop_end_user_computing/vmware_workstation_pro/16_0</a></p><p><code> Vm激活秘钥：</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ZF3R0-FHED2-M80TY-8QYGC-NPKYF</span><br><span class="line">YF390-0HF8P-M81RQ-2DXQE-M2UT6 </span><br><span class="line">ZF71R-DMX85-08DQY-8YMNC-PPHV8</span><br></pre></td></tr></table></figure><h4 id="VMware新建虚拟机"><a href="#VMware新建虚拟机" class="headerlink" title="VMware新建虚拟机"></a>VMware新建虚拟机</h4><ol><li>点击文件-&gt;新建虚拟机<br><img src="https://img-blog.csdnimg.cn/0aefd99b50024cc9a0106d4f7a3eab5b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></li></ol><ol start="2"><li>页面弹出后，选择&lt;自定义&gt;,然后下一步：</li></ol><p><img src="https://img-blog.csdnimg.cn/2c9346f324104cf480435aca9f59baaa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><ol start="3"><li>硬件兼容性，选择默认即可，下一步：<br><img src="https://img-blog.csdnimg.cn/ad95948357444f078e6e106f119271ea.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></li></ol><ol start="4"><li>选择&lt;安装程序光盘映像文件&gt;，会自动匹配到之前下载的kali镜像，下一步：<br><img src="https://img-blog.csdnimg.cn/63c65d9fcc9446149506893c433f6a51.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></li></ol><ol start="5"><li><p>客户机操作系统选择<Linux>,版本选择&lt;Debian 10.x 64位&gt;（Debian系列最上面那个），下一步：<br><img src="https://img-blog.csdnimg.cn/1e444a0063be4d71b4f075089aa9664f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>虚拟机的命名、位置，随意即可，下一步：<br><img src="https://img-blog.csdnimg.cn/15ddf7d252c74584a5034a413671c0d1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>处理器配置，按自己的机器配置来选择，一般的话，就选2+2，下一步：<br><img src="https://img-blog.csdnimg.cn/eaf90b362565440b89cac5dbab6237be.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>虚拟机的内存也是要按自己的机器配置选择，这里选的是4GB（不要选择3G这样的。这个参数后期也可以修改。），下一步：<br><img src="https://img-blog.csdnimg.cn/4a3196f65e7f4ebf9dc52dbcd187ae92.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>网络类型选择<NAT>,下一步：<br><img src="https://img-blog.csdnimg.cn/3f061480dd584b73b8387da3a9eb2ace.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述">介绍一下各个模式：<br>桥接模式：与主机一个网络<br>NAT模式：网络地址装换，虚拟机建立好后可直接上网。<br>仅主机模式：只能访问当前与主机相同的网络，无法访问外网</p></li><li><p>I/O控制器类型选择推荐，下一步：<br><img src="https://img-blog.csdnimg.cn/5159bf1c144f41de9131ae3e1f4fce73.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述">   </p></li><li><p>磁盘类型选择推荐，下一步：<br><img src="https://img-blog.csdnimg.cn/928c41304256405b81265867d201a475.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>选择磁盘，选择&lt;创建新虚拟磁盘&gt;,下一步：<br><img src="https://img-blog.csdnimg.cn/4ea9085ea2c3477392824694a53e00c9.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>磁盘容量选择40GB(这也要根据自己的物理机选择)，选择&lt;存储为单个文件&gt;,下一步：<br><img src="https://img-blog.csdnimg.cn/1d272f44059d45d5ac740b33ca0f59bd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">拆分成多个文件占用的空间都很大，感觉很乱，并且这样虚拟机运行的效率也很低。</span><br><span class="line">选择40G磁盘不是一下子就占用了你磁盘40G，而是用多少占多少</span><br></pre></td></tr></table></figure></li><li><p>随心所欲即可，下一步：<br><img src="https://img-blog.csdnimg.cn/8b6bd6d795684e17a9420945857ffd0d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>最后完成：<br><img src="https://img-blog.csdnimg.cn/728bb6c095b14487b0e165ec6b46df91.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li></ol><h4 id="Kali-的安装配置"><a href="#Kali-的安装配置" class="headerlink" title="Kali 的安装配置"></a>Kali 的安装配置</h4><ol><li><p>点击开启此虚拟机，然后选择&lt; Graphical install(图形化安装) &gt;：<br><img src="https://img-blog.csdnimg.cn/e174d80d68db4be5bb31bcb2b5a686b6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>语言选择，中文简体(英语够好的那就选English)</p></li><li><p>区域，当然中国</p></li><li><p>配置键盘，汉语</p></li><li><p>配置网络，命名随意：<br><img src="https://img-blog.csdnimg.cn/5779d0a5c98740b7afd413dce4eeaf32.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>域名可不写，继续</p></li><li><p>设置用户名和密码：<br><img src="https://img-blog.csdnimg.cn/79dbd77fc3064f5193ca99941db4c106.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><img src="https://img-blog.csdnimg.cn/43db6271c30a4ae6baaefbf26f01739e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><img src="https://img-blog.csdnimg.cn/1368eb5ea0fb4c0684d70016a8f56cbd.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>设置磁盘分区：<br><img src="https://img-blog.csdnimg.cn/6209a4774755431f90d53bab4ea3374e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><img src="https://img-blog.csdnimg.cn/13eef3aeb07a4543831fbb394080990d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><img src="https://img-blog.csdnimg.cn/aadbb13e62b54587ba0a0adacda5e790.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>软件选择：<br><img src="https://img-blog.csdnimg.cn/04aeb10b0049454fbb9dc8a723d352fa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li></ol><ul><li>xfcehe、gnome均为桌面，选择一个即可。</li><li>这里需要注意的是，从2020版本后，kali不在提供单独的图形界面，所以若要安装有图形界面的系统，需要在网速比较好的情况下安装，否则会默认安装简易版，无图形界面，同时在下一步有可能会出现安装失败的情况。</li></ul><ol start="10"><li><p>等待一段时间后出现如下界面，选择“是”：<br><img src="https://img-blog.csdnimg.cn/0238188743cc47f892d3d81a72176583.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>选第二个：<br><img src="https://img-blog.csdnimg.cn/1a1f47a8e1f840a59ddbd4c596f8333b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p></li><li><p>安装完成<br><img src="https://img-blog.csdnimg.cn/f1f732be8aa541aab74eaf5cfa162cee.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述">(如果登录后桌面大小不对，请安装VMtools)</p></li></ol><h4 id="kali-换成国内源"><a href="#kali-换成国内源" class="headerlink" title="kali 换成国内源"></a>kali 换成国内源</h4><ol><li>打开root终端，输入<strong>vim /etc/apt/sources.list</strong><br><img src="https://img-blog.csdnimg.cn/9848b80a7d47424493b29c1c1557c4fa.png" alt="请添加图片描述">  </li></ol><ul><li>如果在主机复制了东西在虚拟机中不能粘贴，在root终端中输入：<strong>apt-get install open-vm-tools-desktop fuse</strong> ，然后重启虚拟机，再进行粘贴。</li></ul><ol start="2"><li>先用<code> #</code>注释掉之前源的地址：<br><img src="https://img-blog.csdnimg.cn/99eebac3f5b244728f807e379c845788.png" alt="请添加图片描述"></li><li>换国内源：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 中科大的源</span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span></span><br></pre></td></tr></table></figure><p><strong>若不能粘贴或是编辑，那先按“ i”键，再粘贴</strong>。</p><ol start="4"><li>保存：</li></ol><p>粘贴完源后，先按”<strong>Esc</strong>“，在输入”<strong>：</strong>“，然后输入”<strong>wq</strong>“，Enter，完成，再重启即可：<br><img src="https://img-blog.csdnimg.cn/f6ac7850857741f6b18fc90056f593c3.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5LqU6ICB5pif,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p>theend</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/20/hello-world/"/>
      <url>/2021/11/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
